import java.awt.*;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Joseph
 */
public class Calculator extends javax.swing.JFrame 
{

    //Instance Variables
    private static double firstNumber;
    private static char operator;
    private static char tempOperator;
    private static double secondNumber;
    private static double tempNumber;
    
    private static boolean isDeci;
    private static boolean isWork;
    private static boolean isStore;
    private static boolean isEqual;
    
    private static String tempStr2;
    private static String tempStr;
    /**
     * Creates new form Calculator
     */
    public Calculator() 
    {
        initComponents();
        reset();
    }
    private void reset()
    {
        jLabel1.setText(" ");
        jLabel2.setText("0");
        isDeci = false;
        isWork = false;
        isStore = false;
        isEqual = false;
    }
    
    private void testEqual()
    {
        if(isEqual)
        {
            reset();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        MCButton = new javax.swing.JButton();
        MRButton = new javax.swing.JButton();
        MSButton = new javax.swing.JButton();
        MplusButton = new javax.swing.JButton();
        MminusButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        BackspaceButton = new javax.swing.JButton();
        CEButton = new javax.swing.JButton();
        CButton = new javax.swing.JButton();
        PlusMinusButton = new javax.swing.JButton();
        SqRtButton = new javax.swing.JButton();
        SevenButton = new javax.swing.JButton();
        EightButton = new javax.swing.JButton();
        NineButton = new javax.swing.JButton();
        DivideButton = new javax.swing.JButton();
        PercentButton = new javax.swing.JButton();
        ReciprocalButton = new javax.swing.JButton();
        MultiplyButton = new javax.swing.JButton();
        SixButton = new javax.swing.JButton();
        FourButton = new javax.swing.JButton();
        FiveButton = new javax.swing.JButton();
        TwoButton = new javax.swing.JButton();
        OneButton = new javax.swing.JButton();
        ThreeButton = new javax.swing.JButton();
        MinusButton = new javax.swing.JButton();
        ZeroButton = new javax.swing.JButton();
        DotButton = new javax.swing.JButton();
        PlusButton = new javax.swing.JButton();
        EqualsButton = new javax.swing.JButton();

        jButton2.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        jButton2.setText("MC");
        jButton2.setAlignmentY(0.0F);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton2.setDefaultCapable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setIconTextGap(0);
        jButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton2.setName(""); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setFocusable(false);
        setMinimumSize(new java.awt.Dimension(240, 350));

        MCButton.setText("MC");
        MCButton.setAlignmentY(0.0F);
        MCButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        MCButton.setDefaultCapable(false);
        MCButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        MCButton.setIconTextGap(0);
        MCButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        MCButton.setName("MCbutton"); // NOI18N
        MCButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MCButtonActionPerformed(evt);
            }
        });

        MRButton.setText("MR");
        //MRButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        MRButton.setFont(new Font("Calibri", Font.PLAIN, MRButton.getHeight() / 3));
        MRButton.setMaximumSize(new java.awt.Dimension(21, 19));
        MRButton.setMinimumSize(new java.awt.Dimension(21, 19));
        MRButton.setPreferredSize(new java.awt.Dimension(21, 19));


        MSButton.setText("MS");
        MSButton.setFont(new Font("Calibri", Font.PLAIN, MRButton.getHeight() / 3));
        MSButton.setAlignmentY(0.0F);
        MSButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        MSButton.setMargin(new java.awt.Insets(0, 0, 0, 0));

        MplusButton.setText("M+");
        MplusButton.setFont(new Font("Calibri", Font.PLAIN, MRButton.getHeight() / 3));
        MplusButton.setAlignmentY(0.0F);
        MplusButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        MplusButton.setMargin(new java.awt.Insets(0, 0, 0, 0));

        MminusButton.setText("M-");
        MminusButton.setAlignmentY(0.0F);
        MminusButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        MminusButton.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText(" ");
        jLabel1.setAlignmentY(0.0F);
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setAlignmentY(0.0F);

        BackspaceButton.setText("←");
        BackspaceButton.setAlignmentY(0.0F);
        BackspaceButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        BackspaceButton.setDefaultCapable(false);
        BackspaceButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BackspaceButton.setIconTextGap(0);
        BackspaceButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        BackspaceButton.setName(""); // NOI18N
        BackspaceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackspaceButtonActionPerformed(evt);
            }
        });

        CEButton.setText("CE");
        CEButton.setAlignmentY(0.0F);
        CEButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CEButton.setDefaultCapable(false);
        CEButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CEButton.setIconTextGap(0);
        CEButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        CEButton.setName(""); // NOI18N
        CEButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CEButtonActionPerformed(evt);
            }
        });

        CButton.setText("C");
        CButton.setAlignmentY(0.0F);
        CButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        CButton.setDefaultCapable(false);
        CButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        CButton.setIconTextGap(0);
        CButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        CButton.setName(""); // NOI18N
        CButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CButtonActionPerformed(evt);
            }
        });

        PlusMinusButton.setText("±");
        PlusMinusButton.setAlignmentY(0.0F);
        PlusMinusButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        PlusMinusButton.setDefaultCapable(false);
        PlusMinusButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        PlusMinusButton.setIconTextGap(0);
        PlusMinusButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        PlusMinusButton.setName(""); // NOI18N
        PlusMinusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlusMinusButtonActionPerformed(evt);
            }
        });

        SqRtButton.setText("√");
        SqRtButton.setAlignmentY(0.0F);
        SqRtButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SqRtButton.setDefaultCapable(false);
        SqRtButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SqRtButton.setIconTextGap(0);
        SqRtButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        SqRtButton.setName(""); // NOI18N
        SqRtButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SqRtButtonActionPerformed(evt);
            }
        });

        SevenButton.setText("7");
        SevenButton.setAlignmentY(0.0F);
        SevenButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SevenButton.setDefaultCapable(false);
        SevenButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SevenButton.setIconTextGap(0);
        SevenButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        SevenButton.setName(""); // NOI18N
        SevenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SevenButtonActionPerformed(evt);
            }
        });

        EightButton.setText("8");
        EightButton.setAlignmentY(0.0F);
        EightButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        EightButton.setDefaultCapable(false);
        EightButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EightButton.setIconTextGap(0);
        EightButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        EightButton.setName(""); // NOI18N
        EightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EightButtonActionPerformed(evt);
            }
        });

        NineButton.setText("9");
        NineButton.setAlignmentY(0.0F);
        NineButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        NineButton.setDefaultCapable(false);
        NineButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        NineButton.setIconTextGap(0);
        NineButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        NineButton.setName(""); // NOI18N
        NineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NineButtonActionPerformed(evt);
            }
        });

        DivideButton.setText("/");
        DivideButton.setAlignmentY(0.0F);
        DivideButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        DivideButton.setDefaultCapable(false);
        DivideButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        DivideButton.setIconTextGap(0);
        DivideButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        DivideButton.setName(""); // NOI18N
        DivideButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DivideButtonActionPerformed(evt);
            }
        });

        PercentButton.setText("%");
        PercentButton.setAlignmentY(0.0F);
        PercentButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        PercentButton.setDefaultCapable(false);
        PercentButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        PercentButton.setIconTextGap(0);
        PercentButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        PercentButton.setName(""); // NOI18N
        PercentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PercentButtonActionPerformed(evt);
            }
        });

        ReciprocalButton.setText("1/x");
        ReciprocalButton.setAlignmentY(0.0F);
        ReciprocalButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ReciprocalButton.setDefaultCapable(false);
        ReciprocalButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ReciprocalButton.setIconTextGap(0);
        ReciprocalButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        ReciprocalButton.setName(""); // NOI18N
        ReciprocalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReciprocalButtonActionPerformed(evt);
            }
        });

        MultiplyButton.setText("*");
        MultiplyButton.setAlignmentY(0.0F);
        MultiplyButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        MultiplyButton.setDefaultCapable(false);
        MultiplyButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        MultiplyButton.setIconTextGap(0);
        MultiplyButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        MultiplyButton.setName(""); // NOI18N
        MultiplyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MultiplyButtonActionPerformed(evt);
            }
        });

        SixButton.setText("6");
        SixButton.setAlignmentY(0.0F);
        SixButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        SixButton.setDefaultCapable(false);
        SixButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SixButton.setIconTextGap(0);
        SixButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        SixButton.setName(""); // NOI18N
        SixButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SixButtonActionPerformed(evt);
            }
        });

        FourButton.setText("4");
        FourButton.setAlignmentY(0.0F);
        FourButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        FourButton.setDefaultCapable(false);
        FourButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        FourButton.setIconTextGap(0);
        FourButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        FourButton.setName(""); // NOI18N
        FourButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FourButtonActionPerformed(evt);
            }
        });

        FiveButton.setText("5");
        FiveButton.setAlignmentY(0.0F);
        FiveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        FiveButton.setDefaultCapable(false);
        FiveButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        FiveButton.setIconTextGap(0);
        FiveButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        FiveButton.setName(""); // NOI18N
        FiveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FiveButtonActionPerformed(evt);
            }
        });

        TwoButton.setText("2");
        TwoButton.setAlignmentY(0.0F);
        TwoButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        TwoButton.setDefaultCapable(false);
        TwoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        TwoButton.setIconTextGap(0);
        TwoButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        TwoButton.setName(""); // NOI18N
        TwoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TwoButtonActionPerformed(evt);
            }
        });

        OneButton.setText("1");
        OneButton.setAlignmentY(0.0F);
        OneButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        OneButton.setDefaultCapable(false);
        OneButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        OneButton.setIconTextGap(0);
        OneButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        OneButton.setName(""); // NOI18N
        OneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OneButtonActionPerformed(evt);
            }
        });

        ThreeButton.setText("3");
        ThreeButton.setToolTipText("");
        ThreeButton.setAlignmentY(0.0F);
        ThreeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ThreeButton.setDefaultCapable(false);
        ThreeButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ThreeButton.setIconTextGap(0);
        ThreeButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        ThreeButton.setName(""); // NOI18N
        ThreeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThreeButtonActionPerformed(evt);
            }
        });

        MinusButton.setText("-");
        MinusButton.setAlignmentY(0.0F);
        MinusButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        MinusButton.setDefaultCapable(false);
        MinusButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        MinusButton.setIconTextGap(0);
        MinusButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        MinusButton.setName(""); // NOI18N
        MinusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MinusButtonActionPerformed(evt);
            }
        });

        ZeroButton.setText("0");
        ZeroButton.setAlignmentY(0.0F);
        ZeroButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        ZeroButton.setDefaultCapable(false);
        ZeroButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ZeroButton.setIconTextGap(0);
        ZeroButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        ZeroButton.setName(""); // NOI18N
        ZeroButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ZeroButtonActionPerformed(evt);
            }
        });

        DotButton.setText(".");
        DotButton.setAlignmentY(0.0F);
        DotButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        DotButton.setDefaultCapable(false);
        DotButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        DotButton.setIconTextGap(0);
        DotButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        DotButton.setName(""); // NOI18N
        DotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DotButtonActionPerformed(evt);
            }
        });

        PlusButton.setText("+");
        PlusButton.setAlignmentY(0.0F);
        PlusButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        PlusButton.setDefaultCapable(false);
        PlusButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        PlusButton.setIconTextGap(0);
        PlusButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        PlusButton.setName(""); // NOI18N
        PlusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlusButtonActionPerformed(evt);
            }
        });

        EqualsButton.setText("=");
        EqualsButton.setAlignmentY(0.0F);
        EqualsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        EqualsButton.setDefaultCapable(false);
        EqualsButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        EqualsButton.setIconTextGap(0);
        EqualsButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        EqualsButton.setName(""); // NOI18N
        EqualsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EqualsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(BackspaceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(3, 3, 3)
                            .addComponent(CEButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(3, 3, 3)
                            .addComponent(CButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(3, 3, 3)
                            .addComponent(PlusMinusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(3, 3, 3)
                            .addComponent(SqRtButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(OneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(3, 3, 3)
                                    .addComponent(TwoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(FourButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(3, 3, 3)
                                    .addComponent(FiveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(ZeroButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(3, 3, 3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(SixButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(3, 3, 3)
                                    .addComponent(MultiplyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(3, 3, 3)
                                    .addComponent(ReciprocalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(DotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(3, 3, 3)
                                            .addComponent(PlusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(ThreeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(3, 3, 3)
                                            .addComponent(MinusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(3, 3, 3)
                                    .addComponent(EqualsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SevenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(EightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(NineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(DivideButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(PercentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(MCButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(MRButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(MSButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(MplusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(MminusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel1)
                .addGap(3, 3, 3)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MCButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MRButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MSButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MplusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MminusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackspaceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CEButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PlusMinusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SqRtButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SevenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NineButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DivideButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PercentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReciprocalButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MultiplyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SixButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FourButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FiveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(TwoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(OneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ThreeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MinusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ZeroButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PlusButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(EqualsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MCButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MCButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MCButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void BackspaceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackspaceButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BackspaceButtonActionPerformed

    private void CEButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CEButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CEButtonActionPerformed

    private void CButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CButtonActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_CButtonActionPerformed

    private void PlusMinusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlusMinusButtonActionPerformed
        // TODO add your handling code here:
        testEqual();
        
        tempStr2 = jLabel2.getText();
        tempStr = jLabel1.getText();
        if(!isStore)
        {
            firstNumber = Double.parseDouble((tempStr2));
            tempNumber = (-1.0*firstNumber);
            jLabel2.setText(Double.toString(tempNumber));
            isStore = true;
        }
        else if(isStore)
        {
            secondNumber = Double.parseDouble((tempStr2));
            tempNumber = (-1.0*secondNumber);
            jLabel2.setText(Double.toString(tempNumber));
            isStore = false;
        }
        tempStr2 = ("negate(" + (tempNumber) + ")");
        //isWork = true;
        jLabel1.setText(tempStr + " " + tempStr2);
    }//GEN-LAST:event_PlusMinusButtonActionPerformed

    private void SqRtButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SqRtButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SqRtButtonActionPerformed

    private void SevenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SevenButtonActionPerformed
        // TODO add your handling code here: 
        testEqual();
        
        tempStr2 = jLabel2.getText();
        if(tempStr2.charAt(0) == '0' && tempStr2.length() == 1)
        {
            jLabel2.setText("7");
        }
        else if(isWork)
        {
            jLabel2.setText("7");
        }
        else
        {
            jLabel2.setText(tempStr2 + "7");
        }
        isWork = false;
    }//GEN-LAST:event_SevenButtonActionPerformed

    private void EightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EightButtonActionPerformed
        // TODO add your handling code here:
        testEqual();
        
        tempStr2 = jLabel2.getText();
        if(tempStr2.charAt(0) == '0' && tempStr2.length() == 1)
        {
            jLabel2.setText("8");
        }
        else if(isWork)
        {
            jLabel2.setText("8");
        }
        else
        {
            jLabel2.setText(tempStr2 + "8");
        }
        isWork = false;
    }//GEN-LAST:event_EightButtonActionPerformed

    private void NineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NineButtonActionPerformed
        // TODO add your handling code here:
        testEqual();
        
        tempStr2 = jLabel2.getText();
        if(tempStr2.charAt(0) == '0' && tempStr2.length() == 1)
        {
            jLabel2.setText("9");
        }
        else if(isWork)
        {
            jLabel2.setText("9");
        }
        else
        {
            jLabel2.setText(tempStr2 + "9");
        }
        isWork = false;
    }//GEN-LAST:event_NineButtonActionPerformed

    private void DivideButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DivideButtonActionPerformed
        // TODO add your handling code here:
        testEqual();
        
        tempStr2 = jLabel2.getText();
        tempStr = jLabel1.getText();
        tempOperator = '/';
        if(!isStore)
        {
            operator = '/';
            firstNumber = Double.parseDouble((tempStr2));
            isStore = true;
        }
        else if(isStore)
        {
            if(operator == '+')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber + secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
            else if(operator == '-')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber - secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
            else if(operator == '*')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber * secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
            else if(operator == '/')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber / secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
        }
        operator = tempOperator;
        isWork = true;
        jLabel1.setText(tempStr + " " + tempStr2 + " ÷");
    }//GEN-LAST:event_DivideButtonActionPerformed

    private void PercentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PercentButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PercentButtonActionPerformed

    private void ReciprocalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReciprocalButtonActionPerformed
        // TODO add your handling code here:
        testEqual();
        
        tempStr2 = jLabel2.getText();
        tempStr = jLabel1.getText();
        if(!isStore)
        {
            firstNumber = Double.parseDouble((tempStr2));
            tempNumber = (1.0/firstNumber);
            jLabel2.setText(Double.toString(tempNumber));
            isStore = true;
        }
        else if(isStore)
        {
            secondNumber = Double.parseDouble((tempStr2));
            tempNumber = (1/secondNumber);
            jLabel2.setText(Double.toString(tempNumber));
        }
        tempStr2 = ("reciproc(" + (1/tempNumber) + ")");
        isWork = true;
        jLabel1.setText(tempStr + " " + tempStr2);
    }//GEN-LAST:event_ReciprocalButtonActionPerformed

    private void MultiplyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MultiplyButtonActionPerformed
        // TODO add your handling code here:
        testEqual();
        
        tempStr2 = jLabel2.getText();
        tempStr = jLabel1.getText();
        tempOperator = '*';
        if(!isStore)
        {
            operator = '*';
            firstNumber = Double.parseDouble((tempStr2));
            isStore = true;
        }
        else if(isStore)
        {
            if(operator == '+')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber + secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
            else if(operator == '-')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber - secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
            else if(operator == '*')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber * secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
            else if(operator == '/')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber / secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
            operator = tempOperator;
        }
        isWork = true;
        jLabel1.setText(tempStr + " " + tempStr2 + " *");
    }//GEN-LAST:event_MultiplyButtonActionPerformed

    private void SixButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SixButtonActionPerformed
        // TODO add your handling code here:
        testEqual();
        
        tempStr2 = jLabel2.getText();
        if(tempStr2.charAt(0) == '0' && tempStr2.length() == 1)
        {
            jLabel2.setText("6");
        }
        else if(isWork)
        {
            jLabel2.setText("6");
        }
        else
        {
            jLabel2.setText(tempStr2 + "6");
        }
        isWork = false;
    }//GEN-LAST:event_SixButtonActionPerformed

    private void FourButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FourButtonActionPerformed
        // TODO add your handling code here:
        testEqual();
        
        tempStr2 = jLabel2.getText();
        if(tempStr2.charAt(0) == '0' && tempStr2.length() == 1)
        {
            jLabel2.setText("4");
        }
        else if(isWork)
        {
            jLabel2.setText("4");
        }
        else
        {
            jLabel2.setText(tempStr2 + "4");
            
        }
        isWork = false;
    }//GEN-LAST:event_FourButtonActionPerformed

    private void FiveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FiveButtonActionPerformed
        // TODO add your handling code here:
        testEqual();
        
        tempStr2 = jLabel2.getText();
        if(tempStr2.charAt(0) == '0' && tempStr2.length() == 1)
        {
            jLabel2.setText("5");
        }
        else if(isWork)
        {
            jLabel2.setText("5");
        }
        else
        {
            jLabel2.setText(tempStr2 + "5");
        }
        isWork = false;
    }//GEN-LAST:event_FiveButtonActionPerformed

    private void TwoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TwoButtonActionPerformed
        // TODO add your handling code here:
        testEqual();
        
        tempStr2 = jLabel2.getText();
        if(tempStr2.charAt(0) == '0' && tempStr2.length() == 1)
        {
            jLabel2.setText("2");
        }
        else if(isWork)
        {
            jLabel2.setText("2");
        }
        else
        {
            jLabel2.setText(tempStr2 + "2");
        }
        isWork = false;
    }//GEN-LAST:event_TwoButtonActionPerformed

    private void OneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OneButtonActionPerformed
        // TODO add your handling code here:
        testEqual();
        
        tempStr2 = jLabel2.getText();
        if(tempStr2.charAt(0) == '0' && tempStr2.length() == 1)
        {
            jLabel2.setText("1");
        }
        else if(isWork)
        {
            jLabel2.setText("1");
        }
        else
        {
            jLabel2.setText(tempStr2 + "1");
        }
        isWork = false;
    }//GEN-LAST:event_OneButtonActionPerformed

    private void ThreeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThreeButtonActionPerformed
        // TODO add your handling code here:
        testEqual();
        
        tempStr2 = jLabel2.getText();
        if(tempStr2.charAt(0) == '0' && tempStr2.length() == 1)
        {
            jLabel2.setText("3");
        }else if(isWork)
        {
            jLabel2.setText("3");
        }
        else
        {
            jLabel2.setText(tempStr2 + "3");
        }
        isWork = false;
    }//GEN-LAST:event_ThreeButtonActionPerformed

    private void MinusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MinusButtonActionPerformed
        // TODO add your handling code here:
        testEqual();
        
        tempStr2 = jLabel2.getText();
        tempStr = jLabel1.getText();
        tempOperator = '-';
        
        if(!isStore)
        {
            firstNumber = Double.parseDouble((tempStr2));
            isStore = true;
            
        }
        else if(isStore)
        {
            if(operator == '+')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber + secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
            else if(operator == '-')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber - secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
            else if(operator == '*')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber * secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
            else if(operator == '/')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber / secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
        }
        operator = tempOperator;
        isWork = true;
        jLabel1.setText(tempStr + " " + tempStr2 + " -");
        
    }//GEN-LAST:event_MinusButtonActionPerformed

    private void ZeroButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ZeroButtonActionPerformed
        // TODO add your handling code here:
        testEqual();
        
        tempStr2 = jLabel2.getText();
        if(tempStr2.charAt(0) == '0' && tempStr2.length() == 1)
        {
            // Do nothing
        }
        else if(isWork)
        {
            jLabel2.setText("0");
        }
        else
        {
            jLabel2.setText(tempStr2 + "0");
        }   
        isWork = false;
    }//GEN-LAST:event_ZeroButtonActionPerformed

    private void DotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DotButtonActionPerformed
        // TODO add your handling code here:
        testEqual();
        
        tempStr2 = jLabel2.getText();
        
        if(!isDeci)
        {
            jLabel2.setText(tempStr2 + ".");
            isDeci = true;
        }
    }//GEN-LAST:event_DotButtonActionPerformed

    private void PlusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlusButtonActionPerformed
        // TODO add your handling code here:
        testEqual();
        
        tempStr2 = jLabel2.getText();
        tempStr = jLabel1.getText();
        tempOperator = '+';
        
        if(!isStore)
        {
            firstNumber = Double.parseDouble((tempStr2));
            isStore = true;
        }
        else if(isStore)
        {
            if(operator == '+')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber + secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
            else if(operator == '-')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber - secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
            else if(operator == '*')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber * secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
            else if(operator == '/')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber / secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
        }
        operator = tempOperator;
        isWork = true;
        jLabel1.setText(tempStr + " " + tempStr2 + " +");
            
            
    }//GEN-LAST:event_PlusButtonActionPerformed

    private void EqualsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EqualsButtonActionPerformed
        // TODO add your handling code here:
        //reset();
        tempStr2 = jLabel2.getText();
        tempStr = jLabel1.getText();
        if(!isStore)
        {
            //operator = '=';
            firstNumber = Double.parseDouble((tempStr2));
            isStore = true;
            jLabel2.setText(Double.toString(firstNumber));
        }
        else if(isStore)
        {
            if(operator == '+')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber + secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
            else if(operator == '-')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber - secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
            else if(operator == '*')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber * secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
            else if(operator == '/')
            {
                secondNumber = Double.parseDouble((tempStr2));
                tempNumber = firstNumber / secondNumber;
                firstNumber = tempNumber;
                jLabel2.setText(Double.toString(tempNumber));
            }
            jLabel1.setText(" ");
            isEqual = true;
        }
    }//GEN-LAST:event_EqualsButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackspaceButton;
    private javax.swing.JButton CButton;
    private javax.swing.JButton CEButton;
    private javax.swing.JButton DivideButton;
    private javax.swing.JButton DotButton;
    private javax.swing.JButton EightButton;
    private javax.swing.JButton EqualsButton;
    private javax.swing.JButton FiveButton;
    private javax.swing.JButton FourButton;
    private javax.swing.JButton MCButton;
    private javax.swing.JButton MRButton;
    private javax.swing.JButton MSButton;
    private javax.swing.JButton MinusButton;
    private javax.swing.JButton MminusButton;
    private javax.swing.JButton MplusButton;
    private javax.swing.JButton MultiplyButton;
    private javax.swing.JButton NineButton;
    private javax.swing.JButton OneButton;
    private javax.swing.JButton PercentButton;
    private javax.swing.JButton PlusButton;
    private javax.swing.JButton PlusMinusButton;
    private javax.swing.JButton ReciprocalButton;
    private javax.swing.JButton SevenButton;
    private javax.swing.JButton SixButton;
    private javax.swing.JButton SqRtButton;
    private javax.swing.JButton ThreeButton;
    private javax.swing.JButton TwoButton;
    private javax.swing.JButton ZeroButton;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
